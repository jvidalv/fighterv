{"version":3,"sources":["images/wood-plank-r.png","images/wood-plan-l.png","images/goblin_camp.png","images/plank-old.png","images/logo.png","images/map.png","images/elf_camp.png","images/bg2.jpg","helpers/General.js","components/Logo.js","components/Register.js","helpers/Personajes.js","components/Selector.js","components/Navbar.js","helpers/Sesion.js","helpers/Enemy.js","components/vistas/Zonas.js","components/vistas/Expeditions.js","components/vistas/Inventory.js","components/vistas/Stats.js","components/Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","General","email","test","String","toLowerCase","Logo","className","src","logo","Register","state","undefined","enviarRegistro","emailCheck","props","registrar","setState","alert","e","this","target","value","role","alertRegistro","type","placeholder","aria-label","aria-describedby","onChange","cambiarEmail","onClick","style","backgroundImage","wpl","back","wpr","Component","Personaje","pj","level","name","power","image","back_history","posibleTraits","magicPower","getMagicPower","physicalPower","getPhysicalPower","traits","devolverTraits","inventory","coins","exp","poder","tipo","mpower","ppower","historia","filter","val","index","Math","floor","parseInt","id","characters","find","char","personaje","Selector","s","devolverPersonaje","bind","seleccionado","devolverStatsBasicos","key","map","trait","devolverPersonajes","_renderizarPersonaje","_renderizarPersonajes","Navbar","_personaje","desconectarse","Sesion","localStorage","setItem","JSON","stringify","data","parse","getItem","removeItem","Enemy","initType","initLevel","initName","life","initLife","initImage","initExp","items","loot","setLoot","luck","random","damage","Zonas","p","zone","number","numbert","continue","guardarPersonaje","enemy","damageDone","isDead","push","item","raidfinalizada","maxWidth","backgroundColor","width","height","fontWeight","paddingLeft","position","data-damage","display","attack","marginTop","marginLeft","_pantallaFinal","goblin_camp","enemyGenerator","Expeditions","fighting","setTimeout","_zone","mapa","Inventory","alignContent","Stats","Menu","vista","lvl","raidFinalizada","getLevel","getAttribute","devolverStorage","actualizar","pold","camp","cambiarVista","textTransform","fontSize","_camp","zona","_titol","_returnVista","_botoBack","App","page","seleccionarPersonaje","borrarStorage","datos","guardarSesion","comprobarPersonaje","href","comprobarEmail","borderRadius","fondo","pageToRender","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d56b5a51.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wood-plank-r.87185c3e.png\";","module.exports = __webpack_public_path__ + \"static/media/wood-plan-l.d1e08af5.png\";","module.exports = __webpack_public_path__ + \"static/media/goblin_camp.b2701332.png\";","module.exports = __webpack_public_path__ + \"static/media/plank-old.61b65945.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.99f2a6f8.png\";","module.exports = __webpack_public_path__ + \"static/media/map.a25191ee.png\";","module.exports = __webpack_public_path__ + \"static/media/elf_camp.8847dfc1.png\";","module.exports = __webpack_public_path__ + \"static/media/bg2.181de865.jpg\";","class General {\n\n    static emailCheck(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase())\n    }\n}\n\nexport default General\n","import React from 'react';\nimport logo from '../images/logo.png'\n\nconst Logo = () => <div>\n    <div className=\"container mt-4\">\n        <img src={logo}/>\n    </div>\n    <h5 className=\"mt-4 button-wrapper ct-b description-wrapper\">\n        Unlimited hordes of enemies, click or die.\n    </h5>\n</div>;\n\nexport default Logo\n","import React, {Component} from 'react';\nimport General from '../helpers/General';\nimport Logo from './Logo';\nimport wpl from '../images/wood-plan-l.png';\nimport wpr from '../images/wood-plank-r.png';\n\nclass Register extends Component {\n\n    state = {\n        email: undefined\n    };\n\n\n    enviarRegistro = () => {\n        if (this.state.email && General.emailCheck(this.state.email)) {\n            this.props.registrar(this.state)\n        } else this.setState({alert: 1})\n    };\n\n    cambiarEmail(e) {\n        this.setState({email: e.target.value})\n    }\n\n    alertRegistro() {\n        return (\n            <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                Email empty or not correct!\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Logo/>\n                <div className=\"container ct-b content-wrapper\">\n                    <div className=\"register-wrapper\">\n                        <div>\n                            <div className=\"display-4 pt-0 mt-3 mb-3 text-center text-uppercase\">\n                                Register\n                            </div>\n                            {this.state.alert && this.alertRegistro()}\n                            <input\n                                type=\"text\"\n                                className=\"form-control mt-2\"\n                                placeholder=\"Email\"\n                                aria-label=\"Username\"\n                                aria-describedby=\"basic-addon1\"\n                                onChange={(e) => this.cambiarEmail(e)}\n                            />\n                            <div className=\"d-flex mt-3\">\n                                <div\n                                    onClick={this.enviarRegistro}\n                                    className=\"btn-left\"\n                                    style={{backgroundImage: `url(${wpl})`}}\n                                >Go in!\n                                </div>\n                                <div\n                                    onClick={this.props.back}\n                                    className=\"btn-right\"\n                                    style={{backgroundImage: `url(${wpr})`}}\n                                >\n                                    Back\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n","import characters from '../json/characters.json';\n\nclass Personaje {\n\n    constructor(pj) {\n        this.level = 1;\n        this.name = pj.name;\n        this.type = pj.type;\n        this.power = pj.power;\n        this.image = pj.image;\n        this.back_history = pj.back_history;\n        this.posibleTraits = [\n            \"High life pool\",\n            \"High armour, very resistant to physical damage\",\n            \"Weak against agile foes\",\n            \"Low life pool\",\n            \"High magic resistance\",\n            \"Very high physcal damage\",\n            \"Enters in martial trance\",\n            \"Very low armour\",\n            \"Very high magic power\",\n\n        ];\n        this.magicPower = this.getMagicPower(pj.power, pj.type);\n        this.physicalPower = this.getPhysicalPower(pj.power, pj.type);\n        this.traits = this.devolverTraits(pj.type, pj.back_history);\n        this.inventory = [];\n        this.coins = 0;\n        this.exp = 0\n    }\n\n    static getLevel(pj) {\n        if (pj.exp < 100) return pj;\n        else {\n            pj.level = Math.floor((pj.exp / 100) + 1);\n            pj.power = Math.floor(parseInt(pj.power) + (parseInt(pj.level) * 30));\n            return pj\n        }\n    }\n\n    static devolverPersonaje(id) {\n        return characters.find(char => char.id == id)\n    }\n\n    static devolverPersonajes() {\n        return characters;\n    }\n\n    static devolverStatsBasicos(personaje) {\n        const pj = new Personaje(personaje);\n        return pj;\n    }\n\n    getMagicPower(poder, tipo) {\n        var mpower = poder;\n        switch (tipo) {\n            case 'warrior':\n                mpower = poder * 20 / 100;\n                break;\n            case 'priest':\n                mpower = poder * 35 / 100;\n                break;\n            case 'berserker':\n                mpower = poder * 0 / 100;\n                break;\n            case 'mage':\n                mpower = poder * 100 / 100;\n                break;\n        }\n\n        return mpower\n    }\n\n    getPhysicalPower(poder, tipo) {\n        var ppower = poder;\n        switch (tipo) {\n            case 'warrior':\n                ppower = poder * 80 / 100;\n                break;\n            case 'priest':\n                ppower = poder * 70 / 100;\n                break;\n            case 'berserker':\n                ppower = poder * 100 / 100;\n                break;\n            case 'mage':\n                ppower = poder * 0 / 100;\n                break;\n        }\n        return ppower\n    }\n\n    devolverTraits(tipo, historia) {\n        var traits = undefined;\n        switch (tipo) {\n            case 'warrior':\n                traits = this.posibleTraits.filter((val, index) => {\n                    if (index == 0 || index == 2 || index == 1) {\n                        return val\n                    }\n                });\n                break;\n            case 'priest':\n                traits = this.posibleTraits.filter((val, index) => {\n                    if (index == 4 || index == 0 || index == 1) {\n                        return val\n                    }\n                });\n                break;\n            case 'berserker':\n                traits = this.posibleTraits.filter((val, index) => {\n                    if (index == 3 || index == 5 || index == 7 || index == 6) {\n                        return val\n                    }\n                });\n                break;\n            case 'mage':\n                traits = this.posibleTraits.filter((val, index) => {\n                    if (index == 4 || index == 8 || index == 3 || index == 7) {\n                        return val\n                    }\n                });\n                break;\n        }\n        return traits\n    }\n\n}\n\nexport default Personaje\n","import React, {Component} from 'react';\nimport Personaje from '../helpers/Personajes';\nimport wpr from '../images/wood-plank-r.png';\n\nclass Selector extends Component {\n\n    state = {\n        personaje: 0\n    };\n\n    constructor(s) {\n        super(s);\n        this.state = {\n            personaje: 0\n        };\n        this.devolverPersonaje = this.devolverPersonaje.bind(this)\n\n    }\n\n    devolverPersonaje() {\n        const personaje = Personaje.devolverPersonaje(this.state.personaje);\n        const pj = new Personaje(personaje);\n        this.props.seleccionado(pj)\n    }\n\n    _renderizarPersonaje() {\n        const personaje = Personaje.devolverPersonaje(this.state.personaje);\n        const pj = Personaje.devolverStatsBasicos(personaje);\n\n        const renderPersonaje = (\n            <div className=\"d-flex mt-4 pantalla-personaje-selector ct-b\" key={personaje.id}>\n                <div className=\"ml-2\">\n                    <h1>{personaje.name}</h1>\n                    <div>\n                        <h4>A {personaje.back_history} that became a {personaje.type}</h4>\n                    </div>\n                    <div>\n                        <h5>Initial power level of {personaje.power}</h5>\n                    </div>\n                    <hr/>\n                    <div>\n                        <h5>Stats:</h5>\n                        <span> Magic power: {pj.magicPower} </span><br/>\n                        <span> Physical power: {pj.physicalPower} </span><br/>\n                    </div>\n                    <hr/>\n                    <div>\n                        <h5>Traits:</h5>\n                        {pj.traits.map((trait) => <div key={trait}> - {trait} </div>)}\n                    </div>\n                </div>\n                <img\n                    src={`/react-old-fighterv/images/characters/${personaje.image}`}\n                    className=\"img-selector-personaje\"\n                />\n            </div>\n        );\n\n        return renderPersonaje;\n    }\n\n    _renderizarPersonajes() {\n        const personajes = Personaje.devolverPersonajes();\n        const renderPersonajes = personajes.map((pj) =>\n            <div onClick={() => this.setState({personaje: pj.id})} key={pj.id}>\n                <img\n                    src={`/react-old-fighterv/images/characters/${pj.image}`}\n                    className={this.state.personaje != pj.id ? 'no-seleccionado' : ''}\n                />\n            </div>\n        );\n        return renderPersonajes;\n    }\n\n    render() {\n        return (\n            <div className=\"container ct-b mt-4\">\n                <div className=\"selector-wrapper\">\n                    <div>\n                        <div className=\"display-4 pt-0 text-center\">\n                            Select your character\n                        </div>\n                        {this._renderizarPersonaje()}\n                        <div className=\"d-inline-flex listado-personajes\">\n                            {this._renderizarPersonajes()}\n                        </div>\n                    </div>\n                    <div>\n                        <div\n                            onClick={this.devolverPersonaje}\n                            className=\"btn-right\"\n                            style={{backgroundImage: `url(${wpr})`}}\n                        >\n                            Continue!\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Selector;\n","import React, {Component} from 'react';\n\nclass Navbar extends Component {\n\n    _personaje() {\n        if (this.props.personaje) {\n            return <span><span\n                className=\"\">{this.props.personaje.name}, {this.props.personaje.type} of level {this.props.personaje.level}</span><span\n                className=\"px-3\">|</span></span>\n        }\n    }\n\n    render() {\n        if (this.props.email) {\n            return (\n                <div className=\"container d-flex ct-b\">\n                    <div className=\"ml-auto\">\n                        Hello <strong>{this.props.email}</strong>\n                        <span className=\"px-3\">|</span>\n                        {this._personaje()}\n\n                        <span className=\"small\">\n              <span className=\"login-out\" onClick={this.props.desconectarse}>Login out</span>\n            </span>\n                    </div>\n                </div>\n            );\n        }\n        return <div></div>\n    }\n}\n\nexport default Navbar;\n","class Sesion {\n\n    static guardarSesion(email) {\n        return localStorage.setItem('email', JSON.stringify(email));\n    }\n\n    static guardarPersonaje(pj) {\n        return localStorage.setItem('pj', JSON.stringify(pj));\n    }\n\n    static devolverStorage(data) {\n        return JSON.parse(localStorage.getItem(data))\n    }\n\n    static borrarStorage(data) {\n        return localStorage.removeItem(data)\n    }\n\n}\n\nexport default Sesion\n","class Enemy {\n\n    constructor(tipo) {\n        this.type = this.initType(tipo);\n        this.level = this.initLevel();\n        this.name = this.initName();\n        this.life = this.initLife();\n        this.image = this.initImage();\n        this.exp = this.initExp();\n        this.items = [\n            'Basic sword', 'Basic armour', 'Basic shield',\n            'Expert sword', 'Expert armour', 'Expert shield',\n            'Legendary sword', 'Legendary armour', 'Legendary shield'\n        ];\n        this.loot = this.setLoot()\n    }\n\n    initType(tipo) {\n        const luck = Math.floor(Math.random() * 100);\n        switch (tipo) {\n            case 'goblin_camp':\n                return (luck > 60 ? (luck > 90 ? 'warchief' : 'mage') : 'warrior');\n            default:\n                return 'warrior'\n        }\n    }\n\n    initLevel() {\n        switch (this.type) {\n            case 'warrior':\n                return 1;\n            case 'mage':\n                return 2;\n            case 'warchief':\n                return 4;\n            default:\n                return 1\n        }\n    }\n\n    initName() {\n        switch (this.type) {\n            case 'warrior':\n                return 'Goblin warrior';\n            case 'mage':\n                return 'Goblin darkmage';\n            case 'warchief':\n                return 'Warchief';\n            default:\n                return 'Goblin warrior'\n        }\n    }\n\n    initLife() {\n        switch (this.type) {\n            case 'warrior':\n                return 5400;\n            case 'mage':\n                return 3800;\n            case 'warchief':\n                return 9000;\n            default:\n                return this.level * 1400\n        }\n    }\n\n    initExp() {\n        switch (this.type) {\n            case 'warrior':\n                return this.level * 10;\n            case 'mage':\n                return this.level * 20;\n            case 'warchief':\n                return this.level * 30;\n            default:\n                return this.level * 10\n        }\n    }\n\n    initImage() {\n        switch (this.type) {\n            case 'warrior':\n                return 'warrior.png';\n            case 'mage':\n                return 'mage.png';\n            case 'warchief':\n                return 'warchief.png';\n            default:\n                return 'warrior.png'\n        }\n    }\n\n    damageDone(damage) {\n        this.life = this.life - damage\n    }\n\n    isDead() {\n        return this.life <= 0 ? true : false\n    }\n\n    setLoot() {\n        switch (this.type) {\n            case 'warrior':\n                return {\n                    'coins': Math.floor(Math.random() * 20) + 10,\n                    'item': this.items[Math.floor(Math.random() * 4)]\n                };\n            case 'mage':\n                return {\n                    'coins': Math.floor(Math.random() * 40) + 15,\n                    'item': this.items[Math.floor(Math.random() * 7)]\n                };\n            case 'warchief':\n                return {\n                    'coins': Math.floor(Math.random() * 80) + 40,\n                    'item': this.items[Math.floor(Math.random() * 9)]\n                };\n            default:\n                return this.loot = {\n                    'coins': Math.floor(Math.random() * 20),\n                    'item': this.items[Math.floor(Math.random() * 3)]\n                }\n        }\n    }\n\n\n}\n\nexport default Enemy\n","import React, {Component} from 'react';\nimport Sesion from '../../helpers/Sesion';\nimport Enemy from '../../helpers/Enemy';\nimport goblin_camp from '../../images/goblin_camp.png'\n\nclass Zonas extends Component {\n\n    constructor(p) {\n        super(p);\n        this.state = {\n            pj: this.props.personaje,\n            zone: this.props.zone,\n            items: [],\n            number: (Math.floor(Math.random() * 3) + 5),\n            numbert: 0,\n            continue: 1,\n            coins: 0,\n            exp: 0\n        }\n    }\n\n    componentWillUpdate() {\n        if (this.state.number <= 0 && this.state.continue == 1) {\n            this.state.pj.coins = this.state.pj.coins + this.state.coins;\n            this.state.pj.exp = this.state.pj.exp + this.state.exp;\n            Sesion.guardarPersonaje(this.state.pj);\n            this.setState({continue: 2, number: 0, pj: this.state.pj})\n        }\n    }\n\n    attack(enemy) {\n        enemy.damageDone(this.state.pj.power);\n        if (enemy.isDead()) {\n            this.state.items.push(enemy.loot.item);\n            this.state.pj.inventory.push(enemy.loot.item);\n            this.state.number = this.state.number - 1;\n            this.setState({\n                coins: this.state.coins + enemy.loot.coins,\n                exp: this.state.exp + enemy.exp,\n                numbert: this.state.numbert + 1\n            })\n        }\n    }\n\n    endRaid() {\n        this.props.raidfinalizada()\n    }\n\n    _pantallaFinal() {\n        return (\n            <div className=\"titulo-lucha raid-end\">\n                <h3> Raid finished </h3>\n                <div> Enemies killed {this.state.numbert} </div>\n                <div className=\"mt-3\">\n                    <h5>Loot</h5>\n                    <div><strong>Experience:</strong> {this.state.exp}</div>\n                    <div><strong>Coins:</strong> {this.state.coins}</div>\n                    <div style={{maxWidth: '192px'}}>\n                        <strong>Items:<br/></strong>\n                        <div className=\"d-flex flex-wrap mt-2\">\n                            {this.state.items.map((item) => <div className=\"bg-brown mr-1 mb-1\">{item}</div>)}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    enemyGenerator() {\n        var enemy = new Enemy(this.state.zone);\n        if (this.state.continue == 1) {\n            return (<div key={Math.random()} className=\"enemy-div\">\n                <div\n                    style={{\n                        backgroundColor: 'red',\n                        width: '-webkit-fill-available',\n                        height: '24px',\n                        fontWeight: 'bold'\n                    }}>\n                    <div style={{backgroundColor: 'green', paddingLeft: '25px', width: '100&', height: '100%'}}>\n                        <div style={{position: 'absolute'}}>\n                            Life: <span data-damage={this.state.pj.power} id=\"life\">{enemy.life}</span><span\n                            style={{display: 'none'}} id=\"life-hidden\">{enemy.life}</span>\n                        </div>\n                    </div>\n                </div>\n                <img\n                    onClick={() => this.attack(enemy)}\n                    src={`/react-old-fighterv/images/goblins/${enemy.image}`}\n                    className={(Math.random() > 0.5 ? (Math.random() > 0.5 ? (Math.random() > 0.5 ? 'enemy e4' : 'enemy e5') : 'enemy e2') : 'enemy e1')}\n                    style={{\n                        marginTop: (Math.floor(Math.random() * 250) + 50) + 'px',\n                        marginLeft: (Math.floor(Math.random() * 250) + 30) + 'px',\n                    }}\n                />\n                <div className=\"damage\">- {this.state.pj.power}</div>\n            </div>)\n        } else return this._pantallaFinal()\n    }\n\n    render() {\n        return (\n            <div className={`expeditions-map fighting-no-3 ${this.state.zone}`}\n                 style={{backgroundImage: `url(${goblin_camp})`}}>\n                <div className=\"titulo\">\n                    <div className=\"d-flex\">\n                        <div><h4>Goblin camp</h4></div>\n                        <div className=\"ml-auto\">Enemies left: {this.state.number}</div>\n                    </div>\n                    <div className=\"d-flex\">\n                        <div className=\"font-weight-bold mr-3\"> Loot</div>\n                        <div className=\"mr-3\"> Coins: {this.state.coins}</div>\n                    </div>\n                </div>\n                {this.enemyGenerator()}\n            </div>\n        )\n    }\n\n}\n\nexport default Zonas;\n","import React, {Component} from 'react';\nimport Zonas from './Zonas';\nimport mapa from '../../images/map.png'\nimport goblin_camp from '../../images/goblin_camp.png'\n\nclass Expeditions extends Component {\n\n    constructor(p) {\n        super(p);\n        this.state = {\n            pj: this.props.personaje,\n            fighting: this.props.fighting,\n            zone: this.props.zone,\n        }\n    }\n\n    _zone() {\n        if (this.state.fighting == 1) {\n            return (\n                <div key={Math.random()} className={`expeditions-map fighting-no ${this.state.zone}`}\n                     style={{backgroundImage: `url(${goblin_camp})`}}>\n                    <div>\n                        <h4 className=\"titulo\">Goblin camp</h4>\n                    </div>\n                    <div className=\"titulo-lucha\">\n                        <h5> Are you sure? </h5>\n                        <div className=\"d-flex\">\n                            <button type=\"button\" className=\"btn btn-dark\"\n                                    onClick={() => this.setState({fighting: 2})}>Yes, fight!\n                            </button>\n                            <button type=\"button\" className=\"btn btn-dark\"\n                                    onClick={() => this.setState({fighting: 0, zone: undefined})}>No, go back\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else if (this.state.fighting == 2) {\n            setTimeout(() => this.setState({fighting: 3}), 1000);\n            return (\n                <div className={`expeditions-map fighting-no-2 ${this.state.zone}`}\n                     style={{backgroundImage: `url(${goblin_camp})`}}>\n                    <div>\n                        <h4 className=\"titulo\">Goblin camp</h4>\n                    </div>\n                </div>\n            )\n        } else if (this.state.fighting == 3) {\n            return <Zonas raidfinalizada={this.props.raidfinalizada} personaje={this.state.pj} zone={this.state.zone}/>\n        }\n    }\n\n\n    render() {\n        if (this.state.pj) {\n            if (!this.state.fighting) {\n                return (\n                    <div className=\"expeditions-map\" style={{backgroundImage: `url(${mapa})`}}>\n                        <div className=\"expedition-selector\">\n                            <h4 className=\"titulo\">Choose an expedition</h4>\n                            <ul className=\"list-group\">\n                                <li onClick={() => this.setState({zone: 'goblin_camp', fighting: 1})}\n                                    className=\"list-group-item d-flex justify-content-between align-items-center\">Goblin\n                                    camp\n                                    <span className=\"badge badge-success badge-pill\">\n                  lvl 1\n                </span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center desactivado\">\n                                    Raiders village\n                                    <span className=\"badge badge-warning badge-pill\">\n                  lvl 7\n                </span>\n                                </li>\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center desactivado\">Dragon\n                                    cave\n                                    <span className=\"badge badge-danger badge-pill\">lvl 15</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (this._zone())\n            }\n        }\n    }\n\n}\n\nexport default Expeditions;\n","import React, {Component} from 'react';\n\nclass Inventory extends Component {\n\n    constructor(p) {\n        super(p);\n        this.state = {\n            pj: this.props.personaje,\n        }\n\n    }\n\n    parseItems() {\n\n    }\n\n    render() {\n        if (this.state.pj) {\n            return (\n                <div className=\"inventory\">\n                    <div>\n                        <div className=\"d-flex flex-wrap\" style={{alignContent: 'space-between'}}>\n                            {this.state.pj.inventory.map((item) => (\n                                <div\n                                    className=\"inventory-item\"\n                                >\n                                    {item}\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>);\n        }\n        return <div></div>\n    }\n}\n\nexport default Inventory;\n","import React, {Component} from 'react';\n\nclass Stats extends Component {\n\n    constructor(p) {\n        super(p);\n        this.state = {\n            pj: this.props.personaje,\n        }\n\n    }\n\n    render() {\n        if (this.state.pj) {\n            return (\n                <div className=\"stats\">\n                    <div>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center bg-red\">\n                                Level: {this.state.pj.level}\n                            </li>\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center bg-red\">\n                                Experience: {this.state.pj.exp}\n                            </li>\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center bg-red\">\n                                Power: {this.state.pj.power}\n                            </li>\n                            <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n                                <strong> Traits </strong>\n                            </li>\n                            {this.state.pj.traits.map((trait) => (\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\"\n                                    key={trait}> - {trait}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>);\n        }\n        return <div></div>\n    }\n}\n\nexport default Stats;\n","import React, {Component} from 'react';\nimport Sesion from '../helpers/Sesion';\nimport Expeditions from './vistas/Expeditions';\nimport Inventory from './vistas/Inventory';\nimport Stats from './vistas/Stats';\nimport Personaje from '../helpers/Personajes';\nimport camp from '../images/elf_camp.png';\nimport pold from '../images/plank-old.png';\nimport wpl from '../images/wood-plan-l.png';\n\nclass Menu extends Component {\n\n    constructor(p) {\n        super(p);\n        this.state = {\n            pj: this.props.personaje,\n            vista: 'camp',\n            lvl: this.props.personaje.level\n        };\n\n        this.raidFinalizada = this.raidFinalizada.bind(this);\n        this.state.pj = Personaje.getLevel(this.state.pj)\n\n    }\n\n    cambiarVista(e) {\n        if (this.state.vista != e.target.getAttribute('value')) {\n            this.setState({vista: e.target.getAttribute('value')})\n        }\n    }\n\n    raidFinalizada() {\n        this.setState({pj: Personaje.getLevel(Sesion.devolverStorage('pj')), vista: 'expeditions'});\n        this.props.actualizar(Personaje.getLevel(Sesion.devolverStorage('pj')))\n    }\n\n    _camp() {\n        return <div>\n            <div className=\"titel-camp\" style={{backgroundImage: `url(${pold})`}}>\n                <span className=\"display-4 ct-b\">CAMP</span>\n            </div>\n            <div className=\"wrapper-camp\" style={{backgroundImage: `url(${camp})`}}>\n                <div>\n                    <div>\n                        <div\n                            value=\"expeditions\"\n                            onClick={(e) => this.cambiarVista(e)}\n                            className=\"camp-icon-r\"\n                        >Expeditions\n                        </div>\n                    </div>\n                    <div className=\"d-flex\">\n                        <div\n                            value=\"inventory\"\n                            onClick={(e) => this.cambiarVista(e)}\n                            className=\"camp-icon-i\"\n                        >Inventory\n                        </div>\n                        <div\n                            value=\"stats\"\n                            onClick={(e) => this.cambiarVista(e)}\n                            className=\"camp-icon-s\"\n                        >Stats\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n\n    _titol() {\n        if (this.state.vista != \"camp\") {\n            return <div className=\"titel-camp\" style={{backgroundImage: `url(${pold})`, textTransform: 'uppercase'}}>\n                <span className=\"display-4 ct-b\">{this.state.vista}</span>\n            </div>\n        }\n    }\n\n    _botoBack() {\n        if (this.state.vista != \"camp\") {\n            return <div\n                onClick={() => this.setState({vista: 'camp'}, this.raidFinalizada())}\n                className=\"btn-left mt-4\"\n                style={{backgroundImage: `url(${wpl})`, fontSize: '1.6rem'}}\n            >Back to camp\n            </div>\n        }\n    }\n\n    _returnVista() {\n        if (this.state.vista == \"camp\") {\n            return this._camp()\n        } else if (this.state.vista == \"expeditions\") {\n            return <Expeditions key={Math.random()} zona={undefined} fighting={0} raidfinalizada={this.raidFinalizada}\n                                personaje={this.state.pj}/>\n        } else if (this.state.vista == \"inventory\") {\n            return <Inventory personaje={this.state.pj}/>\n        } else if (this.state.vista == \"stats\") {\n            return <Stats personaje={this.state.pj}/>\n        }\n    }\n\n    render() {\n        if (this.state.pj) {\n            return (\n                <div className=\"container mt-4\">\n                    {this._titol()}\n                    {this._returnVista()}\n                    {this._botoBack()}\n                </div>\n            );\n        }\n        return <div></div>\n    }\n}\n\nexport default Menu;\n","import React, {Component} from 'react';\nimport Register from './components/Register';\nimport Selector from './components/Selector';\nimport Navbar from './components/Navbar';\nimport Menu from './components/Menu';\nimport Logo from './components/Logo';\nimport Sesion from './helpers/Sesion';\nimport fondo from './images/bg2.jpg'\nimport wpl from './images/wood-plan-l.png';\nimport wpr from './images/wood-plank-r.png';\n\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(s) {\n        super(s);\n        this.state = {\n            email: undefined,\n            personaje: undefined,\n            page: 0\n        };\n        this.registrar = this.registrar.bind(this);\n        this.desconectarse = this.desconectarse.bind(this);\n        this.seleccionarPersonaje = this.seleccionarPersonaje.bind(this);\n        this.actualizar = this.actualizar.bind(this)\n    }\n\n    componentWillMount() {\n        if (Sesion.devolverStorage('email')) {\n            this.state.email = Sesion.devolverStorage('email').email;\n            if (Sesion.devolverStorage('pj')) {\n                this.state.personaje = Sesion.devolverStorage('pj')\n            }\n        }\n    }\n\n    actualizar(personaje) {\n        this.setState({personaje: personaje})\n    }\n\n    desconectarse() {\n        Sesion.borrarStorage('email');\n        Sesion.borrarStorage('pj');\n        this.setState({email: undefined, personaje: undefined, page: 0})\n    }\n\n    registrar(datos) {\n        Sesion.guardarSesion(datos);\n        this.setState({email: datos.email})\n    }\n\n    seleccionarPersonaje(datos) {\n        Sesion.guardarPersonaje(datos);\n        this.setState({personaje: datos})\n    }\n\n    comprobarEmail() {\n        if (!this.state.email) {\n            return <Register registrar={this.registrar} back={() => this.setState({page: 0})}/>\n        } else return this.comprobarPersonaje()\n    }\n\n    comprobarPersonaje() {\n        if (!this.state.personaje) {\n            return <Selector personaje={this.state.personaje} seleccionado={this.seleccionarPersonaje}/>\n        } else return <Menu actualizar={this.actualizar} personaje={this.state.personaje}/>\n    }\n\n    pageToRender() {\n        if (this.state.page == 0) {\n            return (\n                <div>\n                    <Logo/>\n                    <div className=\"d-flex mt-4 button-wrapper\">\n                        <div\n                            onClick={() => this.setState({page: 1})}\n                            className=\"btn-left\"\n                            style={{backgroundImage: `url(${wpl})`}}\n                        >Play!\n                        </div>\n                        <div\n                            onClick={() => this.setState({page: 2})}\n                            className=\"btn-right\"\n                            style={{backgroundImage: `url(${wpr})`}}\n                        >\n                            Info\n                        </div>\n                    </div>\n                    <div className=\"my-4 button-wrapper text-center\">\n                        <a className=\"ct-b\" href=\"https://github.com/jvidalv/react-old-fighterv\" target=\"_blank\">\n                            💻 Check on GitHub\n                        </a>\n                    </div>\n                </div>\n            )\n        } else if (this.state.page == 1) {\n            return this.comprobarEmail()\n        } else if (this.state.page == 2) {\n            return (\n                <div>\n                    <Logo/>\n                    <div className=\"mt-4 button-wrapper ct-b\">\n                        <div className=\"d-flex\">\n                            <img src=\"https://avatars2.githubusercontent.com/u/27777508?s=460&v=4\"\n                                 style={{width: '35%', height: '35%', borderRadius: '50%'}}\n                            />\n                            <div className=\"ml-3\">I'm a frontend developer who enjoys creating\n                                random web apps on the spare time I have between job and life obligations.<br/>\n                                Hope you enjoy it ;)\n                            </div>\n                        </div>\n                        <div\n                            onClick={() => this.setState({page: 0})}\n                            className=\"btn-right mt-3\"\n                            style={{backgroundImage: `url(${wpr})`}}\n                        >\n                            Back\n                        </div>\n                    </div>\n                </div>)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"wrapper\" style={{backgroundImage: `url(${fondo})`}}>\n                    <Navbar key={Math.random()} personaje={this.state.personaje} desconectarse={this.desconectarse}\n                            email={this.state.email}/>\n                    {this.pageToRender()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}